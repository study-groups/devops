{
  "panelImplementations": [
    {
      "className": "JavaScriptPanel",
      "filePath": "./client/panels/JavaScriptPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "PanelControlCenter",
      "filePath": "./client/panels/PanelControlCenter.js",
      "id": "panel-control-center",
      "title": "Panel Manager",
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": []
    },
    {
      "className": "HtmlPanel",
      "filePath": "./client/panels/HtmlPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "PreviewPanel",
      "filePath": "./client/panels/PreviewPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "ContextPanel",
      "filePath": "./client/panels/ContextPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "NlpPanel",
      "filePath": "./client/panels/NlpPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "EditorPanel",
      "filePath": "./client/panels/EditorPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "CodePanel",
      "filePath": "./client/panels/CodePanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "DomInspectorPanel",
      "filePath": "./client/dom-inspector/DomInspectorPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "DomInspectorSettingsPanel",
      "filePath": "./client/dom-inspector/DomInspectorSettingsPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "FileBrowserPanel",
      "filePath": "./client/file-browser/FileBrowserPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "ThemeSelectorPanel",
      "filePath": "./client/settings/panels/themes/ThemeSelectorPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "DesignTokensPanel",
      "filePath": "./client/settings/panels/css-design/DesignTokensPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "IconsPanel",
      "filePath": "./client/settings/panels/icons/IconsPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "ConsoleLogPanel",
      "filePath": "./client/settings/panels/console/ConsoleLogPanel.js",
      "id": "console-log-panel",
      "title": "Console Log Options",
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": []
    },
    {
      "className": "HtmlRenderSettingsPanel",
      "filePath": "./client/settings/panels/html-render/HtmlRenderSettingsPanel.js",
      "id": "html-render-settings-panel",
      "title": "HTML Rendering",
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": []
    },
    {
      "className": "PluginsPanel",
      "filePath": "./client/settings/panels/plugins/PluginsPanel.js",
      "id": "plugins",
      "title": "Plugins",
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": []
    },
    {
      "className": "LogPanel",
      "filePath": "./client/log/LogPanel.js",
      "id": null,
      "title": null,
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found",
        "No panel title found"
      ]
    },
    {
      "className": "PDataPanel",
      "filePath": "./redux/components/PDataPanel.js",
      "id": null,
      "title": "üîç PData Panel XXX",
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found"
      ]
    },
    {
      "className": "MountInfoPanel",
      "filePath": "./notsure/panels/ContextManagerPanel.js",
      "id": null,
      "title": "Context Inspector",
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": [
        "No panel ID found"
      ]
    },
    {
      "className": "ApiTokenPanel",
      "filePath": "./notsure/panels/ApiTokenPanel.js",
      "id": "api-tokens",
      "title": "API Tokens",
      "hasKeyboardShortcut": false,
      "isDockable": false,
      "zone": null,
      "issues": []
    }
  ],
  "registrations": [
    {
      "filePath": "./client/settings/panels/icons/Icons.js",
      "line": "./client/settings/panels/icons/Icons.js:panelRegistry.register({",
      "id": "icons-panel",
      "title": "Icons",
      "isActive": true
    },
    {
      "filePath": "./client/settings/panels/console/ConsoleLogPanel.js",
      "line": "./client/settings/panels/console/ConsoleLogPanel.js:panelRegistry.register({",
      "id": "console-log-panel",
      "title": "Console Log Options",
      "isActive": true
    },
    {
      "filePath": "./client/settings/panels/html-render/HtmlRenderSettingsPanel.js",
      "line": "./client/settings/panels/html-render/HtmlRenderSettingsPanel.js:panelRegistry.register({",
      "id": "html-render-settings",
      "title": "HTML Rendering",
      "isActive": true
    },
    {
      "filePath": "./client/settings/panels/plugins/PluginsPanel.js",
      "line": "./client/settings/panels/plugins/PluginsPanel.js:panelRegistry.register({",
      "id": "plugins",
      "title": "Plugins",
      "isActive": true
    },
    {
      "filePath": "./client/settings/panels/publish/PublishSettingsPanel.js",
      "line": "./client/settings/panels/publish/PublishSettingsPanel.js:panelRegistry.register({",
      "id": "publish-settings",
      "title": "Publishing",
      "isActive": true
    },
    {
      "filePath": "./client/settings/panels/preview/PreviewSettingsPanel.js",
      "line": "./client/settings/panels/preview/PreviewSettingsPanel.js:panelRegistry.register({",
      "id": "preview-settings",
      "title": "Preview",
      "isActive": true
    },
    {
      "filePath": "./client/settings/utils/EventBusDemoPanel.js",
      "line": "./client/settings/utils/EventBusDemoPanel.js:panelRegistry.register({",
      "id": null,
      "title": "Event Bus Demo (Simplified)",
      "isActive": true
    },
    {
      "filePath": "./packages/devpages-debug/debugPanelInitializer.js",
      "line": "./packages/devpages-debug/debugPanelInitializer.js:        panelRegistry.register({",
      "id": "devtools",
      "title": "DevTools",
      "isActive": true
    },
    {
      "filePath": "./packages/devpages-debug/debugPanelInitializer.js",
      "line": "./packages/devpages-debug/debugPanelInitializer.js:        panelRegistry.register({",
      "id": "devtools",
      "title": "DevTools",
      "isActive": true
    },
    {
      "filePath": "./packages/devpages-debug/debugPanelInitializer.js",
      "line": "./packages/devpages-debug/debugPanelInitializer.js:        panelRegistry.register({",
      "id": "devtools",
      "title": "DevTools",
      "isActive": true
    },
    {
      "filePath": "./packages/devpages-debug/debugPanelInitializer.js",
      "line": "./packages/devpages-debug/debugPanelInitializer.js:        panelRegistry.register({",
      "id": "devtools",
      "title": "DevTools",
      "isActive": true
    },
    {
      "filePath": "./packages/devpages-debug/debugPanelInitializer.js",
      "line": "./packages/devpages-debug/debugPanelInitializer.js:        panelRegistry.register({",
      "id": "devtools",
      "title": "DevTools",
      "isActive": true
    },
    {
      "filePath": "./packages/devpages-debug/debugPanelInitializer.js",
      "line": "./packages/devpages-debug/debugPanelInitializer.js:        panelRegistry.register({",
      "id": "devtools",
      "title": "DevTools",
      "isActive": true
    },
    {
      "filePath": "./notsure/panels/ApiTokenPanel.js",
      "line": "./notsure/panels/ApiTokenPanel.js:panelRegistry.register({",
      "id": "api-tokens",
      "title": "API Tokens",
      "isActive": true
    },
    {
      "filePath": "./analyze-panel-system.js",
      "line": "./analyze-panel-system.js:            const registerIndex = content.indexOf('panelRegistry.register');",
      "id": null,
      "title": null,
      "isActive": true
    }
  ],
  "keyboardShortcuts": [
    {
      "filePath": "client/layout/WorkspaceManager.js",
      "shortcuts": [
        {
          "keys": "Ctrl+Shift+D",
          "action": "Debug Panel Toggle",
          "line": "D', ctrl: true, shift"
        },
        {
          "keys": "Ctrl+Shift+S",
          "action": "Settings Panel Toggle",
          "line": "ctrl: true, shift: true, alt: false, action: () => this"
        }
      ],
      "conflicts": [],
      "issues": []
    },
    {
      "filePath": "client/keyboard/KeyboardShortcutManager.js",
      "shortcuts": [
        {
          "keys": "Ctrl+Shift+D",
          "action": "Debug Panel Toggle",
          "line": "d shortcut string (e.g., \"ctrl+shift"
        },
        {
          "keys": "Ctrl+Shift+S",
          "action": "Settings Panel Toggle",
          "line": "s {string} A normalized shortcut string (e.g., \"ctrl+shift"
        }
      ],
      "conflicts": [],
      "issues": []
    },
    {
      "filePath": "redux/components/KeyboardShortcutHandler.js",
      "shortcuts": [],
      "conflicts": [],
      "issues": []
    }
  ],
  "managementSystems": [
    {
      "filePath": "client/layout/WorkspaceManager.js",
      "type": "Workspace-based",
      "isActive": true,
      "methods": [
        "constructor",
        "if ",
        "initialize",
        "validateSemanticZones",
        "if ",
        "if ",
        "initResizers",
        "initResizer",
        "if ",
        "registerPanelsInRedux",
        "if ",
        "if ",
        "if ",
        "if ",
        "render",
        "if ",
        "if ",
        "for ",
        "if ",
        "if ",
        "if ",
        "if ",
        "createAndMountPanel",
        "if ",
        "if ",
        "if ",
        "if ",
        "updatePanelElement",
        "if ",
        "addPanelEventListeners",
        "if ",
        "renderPanelManager",
        "if ",
        "createPanelManagerElement",
        "createPanelToggleHTML",
        "updatePanelToggleStates",
        "if ",
        "initDragAndDrop",
        "initKeyboardShortcuts",
        "for ",
        "matchesShortcut",
        "togglePanel",
        "toggleLeftSidebar",
        "toggleSidebar",
        "toggleEditor",
        "togglePreview",
        "handleSaveFile",
        "if ",
        "handleRefreshPreview",
        "if ",
        "handleComprehensiveRefresh",
        "setViewMode",
        "handleSmartCopyA",
        "if ",
        "handleSmartCopyB",
        "getActivePanelOfType",
        "for ",
        "getPanelInstance",
        "getFocusedPanel",
        "for ",
        "getSidebarZone",
        "getEditorZone",
        "getPreviewZone",
        "getZoneBySemanticName",
        "getSemanticNameFromElement",
        "mountPanelToZone",
        "if ",
        "if ",
        "destroy",
        "if ",
        "exposeWorkspaceAPI",
        "if ",
        "if ",
        "if ",
        "toggleZone",
        "if ",
        "togglePanel",
        "if ",
        "testPanelZones",
        "if ",
        "if ",
        "if "
      ]
    },
    {
      "filePath": "client/panels/PanelStateManager.js",
      "type": "Client-based",
      "isActive": true,
      "methods": [
        "constructor",
        "initialize",
        "if ",
        "getPanelUIState",
        "getVisiblePanels",
        "getPanelInstance",
        "registerPanel",
        "togglePanelVisibility"
      ]
    },
    {
      "filePath": "client/panels/PanelControlCenter.js",
      "type": "Client-based",
      "isActive": true,
      "methods": [
        "constructor",
        "registerManagedPanel",
        "loadControlState",
        "if ",
        "loadPanelControlState",
        "if ",
        "saveControlState",
        "for ",
        "createElement",
        "render",
        "renderPanelCard",
        "renderPanelPreview",
        "getPanelPreviewContent",
        "switch ",
        "attachEventListeners",
        "if ",
        "if ",
        "setupDragAndDrop",
        "if ",
        "if ",
        "if ",
        "togglePanelVisibility",
        "if ",
        "toggleCardExpansion",
        "updatePanelWidth",
        "if ",
        "reorderCard",
        "if ",
        "collapseAllCards",
        "expandAllCards",
        "getPanelStates",
        "for ",
        "mount",
        "loadControlCenterCSS",
        "destroy"
      ]
    },
    {
      "filePath": "packages/devpages-debug/DebugPanelManager.js",
      "type": "Debug-specific",
      "isActive": true,
      "methods": [
        "constructor",
        "init",
        "createPanelDOM",
        "if ",
        "attachEventListeners",
        "if ",
        "syncRegisteredPanels",
        "if ",
        "loadPanels",
        "if ",
        "if ",
        "if ",
        "if ",
        "toggleSectionCollapse",
        "if ",
        "if ",
        "if ",
        "reopenSectionPanel",
        "toggleVisibility",
        "show",
        "hide",
        "updatePanelVisibility",
        "if ",
        "if ",
        "startDrag",
        "doDrag",
        "endDrag",
        "startResize",
        "doResize",
        "endResize",
        "registerWithZIndexManager",
        "if ",
        "bringToFront",
        "if ",
        "savePersistedState",
        "loadPersistedState",
        "if ",
        "getClosedPanels",
        "getAllPanels",
        "destroy",
        "if ",
        "if ",
        "if "
      ]
    }
  ],
  "discrepancies": [
    {
      "type": "Unregistered Panels",
      "description": "Found 2 panel implementations without registrations",
      "details": [
        "panel-control-center",
        "html-render-settings-panel"
      ]
    },
    {
      "type": "Orphaned Registrations",
      "description": "Found 10 registrations without implementations",
      "details": [
        "icons-panel",
        "html-render-settings",
        "publish-settings",
        "preview-settings",
        "devtools",
        "devtools",
        "devtools",
        "devtools",
        "devtools",
        "devtools"
      ]
    },
    {
      "type": "Multiple Management Systems",
      "description": "Found 4 different panel management systems",
      "details": [
        "client/layout/WorkspaceManager.js",
        "client/panels/PanelStateManager.js",
        "client/panels/PanelControlCenter.js",
        "packages/devpages-debug/DebugPanelManager.js"
      ]
    }
  ],
  "recommendations": [
    {
      "priority": "HIGH",
      "title": "Fix WorkspaceManager Keyboard Shortcuts",
      "description": "Verify togglePanel() method exists and handles Ctrl+Shift+D/S correctly",
      "action": "Check WorkspaceManager.togglePanel() implementation"
    },
    {
      "priority": "HIGH",
      "title": "Disable Conflicting Redux Shortcuts",
      "description": "Redux KeyboardShortcutHandler may conflict with WorkspaceManager",
      "action": "Disable or remove redux/components/KeyboardShortcutHandler.js"
    },
    {
      "priority": "MEDIUM",
      "title": "Register Unregistered Panels",
      "description": "Many panels exist but are not registered in the panel system",
      "action": "Review unregistered panels and add appropriate registrations"
    },
    {
      "priority": "MEDIUM",
      "title": "Consolidate Panel Management",
      "description": "Multiple panel management systems are causing confusion",
      "action": "Choose one primary system and migrate others"
    },
    {
      "priority": "LOW",
      "title": "Clean Up Panel Properties",
      "description": "Standardize panel property definitions (id, title, etc.)",
      "action": "Create panel property schema and enforce it"
    }
  ]
}