const t=100;function e(e={}){const{name:n="StateKit DevTools",maxAge:o=t,shouldIncludeAction:i=()=>!0,shouldIncludeState:r=()=>!0,shouldIncludeError:s=()=>!0,serialize:c={immutable:!1,replacer:null,reviver:null}}=e;let a=[],l=-1,d=null,u={totalActions:0,totalTime:0,averageTime:0,slowestAction:null,fastestAction:null};const p={getActionHistory:()=>[...a],getCurrentStateIndex:()=>l,getPerformanceMetrics:()=>({...u}),timeTravel:t=>{if(t>=0&&t<a.length){l=t;const e=a[t].state;p.emit("timeTravel",{index:t,state:e}),setTimeout(()=>{},100)}},replayAction:t=>{if(t>=0&&t<a.length){const e=a[t].action;d(e)}},clearHistory:()=>{a=[],l=-1,u={totalActions:0,totalTime:0,averageTime:0,slowestAction:null,fastestAction:null},p.emit("historyCleared")},listeners:new Set,emit:(t,e)=>{p.listeners.forEach(n=>{try{n(t,e)}catch(t){console.error("[DevTools] Listener error:",t)}})},subscribe:t=>(p.listeners.add(t),()=>p.listeners.delete(t))};return"undefined"!=typeof window&&(window.__STATEKIT_DEVTOOLS__=p),({getState:t,dispatch:e})=>(d=e,e=>n=>{const i=Date.now(),r=t(),s=e(n),c=Date.now()-i,d=t();u.totalActions++,u.totalTime+=c,u.averageTime=u.totalTime/u.totalActions,(!u.slowestAction||c>u.slowestAction.duration)&&(u.slowestAction={action:n.type,duration:c}),(!u.fastestAction||c<u.fastestAction.duration)&&(u.fastestAction={action:n.type,duration:c});const g={timestamp:i,action:n,state:d,prevState:r,duration:c,error:null};return a.push(g),l=a.length-1,a.length>o&&(a.shift(),l--),p.emit("actionDispatched",{action:n,state:d,prevState:r,duration:c,index:l}),s})}function n(t){const e={showHistory:()=>{console.group("📋 StateKit Action History"),t.getActionHistory().forEach((t,e)=>{console.group(`#${e+1} ${t.action.type} (${t.duration}ms)`),console.log("Action:",t.action),console.log("State:",t.state),console.log("Prev State:",t.prevState),console.groupEnd()}),console.groupEnd()},showPerformance:()=>{const e=t.getPerformanceMetrics();console.group("⚡ StateKit Performance Metrics"),console.log("Total Actions:",e.totalActions),console.log("Average Time:",e.averageTime.toFixed(2)+"ms"),console.log("Slowest Action:",e.slowestAction),console.log("Fastest Action:",e.fastestAction),console.groupEnd()},timeTravel:e=>{console.log(`🕒 Time traveling to action #${e+1}`),t.timeTravel(e)},replayAction:e=>{console.log(`🔄 Replaying action #${e+1}`),t.replayAction(e)},clearHistory:()=>{console.log("🗑️ Clearing action history"),t.clearHistory()}};return"undefined"!=typeof window&&(window.__STATEKIT_PANEL__=e),e}function o(t,e){const n={container:e,devTools:t,isVisible:!1,render:()=>{if(!e)return;const o=t.getActionHistory(),i=t.getPerformanceMetrics();e.innerHTML=`\n                <div style="\n                    position: fixed;\n                    top: 20px;\n                    right: 20px;\n                    width: 400px;\n                    max-height: 600px;\n                    background: #1e1e1e;\n                    color: #fff;\n                    border: 1px solid #333;\n                    border-radius: 8px;\n                    font-family: monospace;\n                    font-size: 12px;\n                    z-index: 10000;\n                    overflow: hidden;\n                ">\n                    <div style="\n                        background: #2d2d2d;\n                        padding: 10px;\n                        border-bottom: 1px solid #333;\n                        display: flex;\n                        justify-content: space-between;\n                        align-items: center;\n                    ">\n                        <strong>StateKit DevTools</strong>\n                        <button onclick="window.__DEVTOOLS_UI__.toggle()" style="\n                            background: #555;\n                            border: none;\n                            color: #fff;\n                            padding: 4px 8px;\n                            border-radius: 4px;\n                            cursor: pointer;\n                        ">${n.isVisible?"Hide":"Show"}</button>\n                    </div>\n                    \n                    <div style="\n                        padding: 10px;\n                        max-height: 400px;\n                        overflow-y: auto;\n                    ">\n                        <div style="margin-bottom: 10px;">\n                            <strong>Performance:</strong><br>\n                            Actions: ${i.totalActions} | \n                            Avg: ${i.averageTime.toFixed(2)}ms\n                        </div>\n                        \n                        <div style="margin-bottom: 10px;">\n                            <strong>Recent Actions:</strong>\n                        </div>\n                        \n                        ${o.slice(-10).map((e,n)=>`\n                            <div style="\n                                padding: 5px;\n                                margin: 2px 0;\n                                background: ${n===t.getCurrentStateIndex()?"#444":"#333"};\n                                border-radius: 4px;\n                                cursor: pointer;\n                            " onclick="window.__DEVTOOLS_UI__.selectAction(${o.length-10+n})">\n                                ${e.action.type} (${e.duration}ms)\n                            </div>\n                        `).join("")}\n                    </div>\n                </div>\n            `},toggle:()=>{n.isVisible=!n.isVisible,e.style.display=n.isVisible?"block":"none",n.render()},selectAction:e=>{t.timeTravel(e),n.render()}};return"undefined"!=typeof window&&(window.__DEVTOOLS_UI__=n),n}function i({name:t,initialState:e,reducers:n}){const o=Object.keys(n).reduce((e,n)=>{const o=`${t}/${n}`;return e[n]=t=>({type:o,payload:t}),e},{});return{name:t,reducer:(o=e,i)=>{const r=Object.entries(n).find(([e])=>`${t}/${e}`===i.type);if(r){const[,t]=r;return t(o,i)}return o},actions:o}}function r(t,e,n=[]){let o={...e};const i=new Set;let r=!1;function s(){return o}function c(e){if(function(t){if(null==t)throw new Error("Actions may not be null or undefined");if("object"!=typeof t)throw new Error("Actions must be plain objects");if(void 0===t.type)throw new Error('Actions may not have an undefined "type" property');try{JSON.stringify(t)}catch(t){throw new Error("Actions must be serializable")}}(e),r)throw new Error("Reducers may not dispatch actions");try{r=!0;const n=o,s=t(o,e);s!==n&&("log/addEntry"!==e.type&&"LOG_ADD_ENTRY"!==e.type&&console.debug("[StateKit] State updating DEBUG]",{action:e.type,prevState:n,newState:s}),o=s,i.forEach(t=>{try{t(o,n,e)}catch(t){console.error("[StateKit] Listener error:",t)}}))}catch(t){throw console.error("[StateKit] Reducer error:",t),t}finally{r=!1}}function a(t){const e=n.map(t=>t({getState:s,dispatch:a}));return e.reduce((t,e)=>(...n)=>t(e(...n)))(c)(t)}return a({type:"@@INIT"}),console.log("[StateKit] New store created with initial state:",o),{getState:s,dispatch:a,subscribe:function(t){if("function"!=typeof t)throw new Error("Expected the listener to be a function");return i.add(t),()=>{i.delete(t)}}}}function s(t={}){const{collapsed:e=!0,duration:n=!1,timestamp:o=!0,colors:i=!0,excludeActions:r=[]}=t;return({getState:t})=>e=>i=>{if(r.includes(i.type))return e(i);const s=t(),c=Date.now();console.groupCollapsed?console.groupCollapsed(`[StateKit] ${i.type}`):console.group(`[StateKit] ${i.type}`),o&&console.log("Time:",(new Date).toISOString()),console.log("Prev State:",s),console.log("Action:",i);const a=e(i),l=t(),d=Date.now();return n&&console.log("Duration:",d-c+"ms"),console.log("Next State:",l),console.groupEnd(),a}}function c(){return({dispatch:t,getState:e})=>n=>o=>"function"==typeof o?o(t,e):n(o)}export{n as createDevpagesConsolePanel,e as createDevpagesTools,o as createDevpagesToolsUI,s as createLogger,i as createSlice,r as createStore,c as createThunk};
