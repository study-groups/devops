Lets build Tetra Drawing System with its own simple langage (YAML
perhaps) that mixes the styles of Cypher and graphviz and is based
around python. I want to use it to build network diagram to describe,
in part, hardware in the Digital Ocean ecosystem. Our diagramming
should track the following node types:

Hosts
Routers
Firewalls
PCs
IOT Devices
DNS
Block Stores
Object Stores
TLS Cert Authority
Whaterver you call a forwarding device

The notion of public and private IPs should be accounted for. Some
hosts will have public IPs, others wont.

The system should create servces.txt  that contains a list of port
assignments to service names. This should include standard services
like nginx, ssh along with:

Postgres: <std port>:<std path found in .service>
JupyterLab:<standard port>: <std path found in .service>
Graphana:<standard port>: <std path found in .service>
Tetra:4444:/path/to/entrypoint.sh

The target environment is Linux but I  want the custom Tetra service
to also run on mac os which does not have systemctl. In this case
tetra_service_ bash funtions will work like ssh-agent in that its
a semi-duriable background process manager.

The general feel of the system should be UNIX CLI command line based
and we assume pipes will be used. I'm imagining a dual pass where
the first collects all of the ip data, and reads the critical and
simple east-west-semantics.txt which identifies a particular east
host and west host. These are parent nodes with all services
duplicated. In addition, compute nodes are defined under east or
west. Unlike the two parent nodes, compute nodes do not expose
public web addresses. Compute nodes may have htpasswd backdoors for
metrics.  More typically, unique https requests are poxied by Nginx
to a compute node on a non-traditional web port and privtate IP.
Which means, WE NEED TO KEEP TRACK OF THIS IP AND ASSIGN IT ACROSS
BOUNDARIES.

Drive the entire exprience from bash functions that start
tetra_draw_ 

A read me that describes an example of configuring an east and west
coast config with network storage named as a result from doctl would
be a good starting point for us to begin this dialog to generate
Tetra Drawing System: A Bash based system for defining, building
and drawing distributed networks.

