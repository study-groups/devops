#!/usr/bin/env bash

# BOOT Logging Wrapper - TCS 4.0 Compliant
# Auto-generated by generate_module_log.sh
# Provides convenience functions for BOOT module logging

# Ensure unified logging is loaded
if ! type tetra_log_event >/dev/null 2>&1; then
    source "${TETRA_SRC}/bash/utils/unified_log.sh"
fi

# === BOOT LOGGING WRAPPERS ===

# Generic BOOT log event
boot_log() {
    tetra_log_event boot "$@"
}

# BOOT try events
boot_log_try() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_try boot "$verb" "$subject" "$metadata"
}

# BOOT success events
boot_log_success() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_success boot "$verb" "$subject" "$metadata"
}

# BOOT fail events
boot_log_fail() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_fail boot "$verb" "$subject" "$metadata"
}

# BOOT info events
boot_log_info() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_info boot "$verb" "$subject" "$metadata"
}

# BOOT debug events
boot_log_debug() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_debug boot "$verb" "$subject" "$metadata"
}

# BOOT warning events
boot_log_warn() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_warn boot "$verb" "$subject" "$metadata"
}

# BOOT error events
boot_log_error() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_error boot "$verb" "$subject" "$metadata"
}

# === MODULE-SPECIFIC LOGGING FUNCTIONS ===
# Add your custom logging functions below this line
#
# Example:
# boot_log_operation_try() {
#     local operation_id="$1"
#     local params="$2"
#     local metadata=$(jq -n --arg params "$params" '{params: $params}')
#     boot_log_try "operation" "$operation_id" "$metadata"
# }

# === QUERY HELPERS ===

# Query BOOT logs
boot_log_query() {
    tetra_log_query_module boot
}

# Query BOOT errors
boot_log_query_errors() {
    tetra_log_query_module boot | jq -c 'select(.status == "fail" or .level == "ERROR")'
}

# Query specific verb
boot_log_query_verb() {
    local verb="$1"
    tetra_log_query_module boot | jq -c --arg verb "$verb" 'select(.verb == $verb)'
}
