#!/usr/bin/env bash

# COLOR Logging Wrapper - TCS 4.0 Compliant
# Auto-generated by generate_module_log.sh
# Provides convenience functions for COLOR module logging

# Ensure unified logging is loaded
if ! type tetra_log_event >/dev/null 2>&1; then
    source "${TETRA_SRC}/bash/utils/unified_log.sh"
fi

# === COLOR LOGGING WRAPPERS ===

# Generic COLOR log event
color_log() {
    tetra_log_event color "$@"
}

# COLOR try events
color_log_try() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_try color "$verb" "$subject" "$metadata"
}

# COLOR success events
color_log_success() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_success color "$verb" "$subject" "$metadata"
}

# COLOR fail events
color_log_fail() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_fail color "$verb" "$subject" "$metadata"
}

# COLOR info events
color_log_info() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_info color "$verb" "$subject" "$metadata"
}

# COLOR debug events
color_log_debug() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_debug color "$verb" "$subject" "$metadata"
}

# COLOR warning events
color_log_warn() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_warn color "$verb" "$subject" "$metadata"
}

# COLOR error events
color_log_error() {
    local verb="$1"
    local subject="$2"
    local metadata="${3:-{}}"
    tetra_log_error color "$verb" "$subject" "$metadata"
}

# === MODULE-SPECIFIC LOGGING FUNCTIONS ===
# Add your custom logging functions below this line
#
# Example:
# color_log_operation_try() {
#     local operation_id="$1"
#     local params="$2"
#     local metadata=$(jq -n --arg params "$params" '{params: $params}')
#     color_log_try "operation" "$operation_id" "$metadata"
# }

# === QUERY HELPERS ===

# Query COLOR logs
color_log_query() {
    tetra_log_query_module color
}

# Query COLOR errors
color_log_query_errors() {
    tetra_log_query_module color | jq -c 'select(.status == "fail" or .level == "ERROR")'
}

# Query specific verb
color_log_query_verb() {
    local verb="$1"
    tetra_log_query_module color | jq -c --arg verb "$verb" 'select(.verb == $verb)'
}
