# QA Agent Profile - Optimized for Q&A workflows with OpenAI models
# This agent formats prompts for the QA module which stores Q&A pairs

AGENT_NAME="qa"
AGENT_DESCRIPTION="Q&A workflow with OpenAI models (stores history)"

# QA-optimized instruction template
# Focus on clear analysis rather than code generation
AGENT_INSTRUCTION_TEMPLATE="You are a helpful AI assistant analyzing code and documentation.

The context provided contains:
- User's question or task description
- Relevant code files and documentation (Evidence sections)

Please provide a clear, thorough answer that:
1. Directly addresses the question or task
2. References specific files and code when relevant
3. Explains the reasoning behind your analysis
4. Suggests concrete next steps if applicable

Format your response in markdown for readability.
"

# QA-optimized example (analysis-focused rather than code generation)
AGENT_EXAMPLE_TEMPLATE="# Analysis: Authentication Flow

## Overview
Based on the evidence provided, the authentication system uses JWT tokens with a two-tier approach:

## Key Files
1. \`src/auth/middleware.js\` - Token validation middleware
2. \`src/auth/tokens.js\` - JWT generation and refresh logic
3. \`config/auth.config.js\` - Timeout and expiry settings

## Authentication Flow
1. User login â†’ JWT access token (15min TTL)
2. Refresh token stored in httpOnly cookie (7 days)
3. Middleware validates on each request
4. Token refresh happens automatically at 5min remaining

## Timeout Issue Analysis
The timeout error likely occurs in \`src/auth/middleware.js:45\` where the token validation check doesn't properly handle expired tokens. The error is thrown before the refresh logic can execute.

## Recommended Fix
Add a pre-validation step to check token expiry and trigger refresh before validation fails. This should be done in the middleware chain before the strict validation.

## Next Steps
1. Review \`middleware.js:45-60\` for the validation logic
2. Add token expiry check before validation
3. Implement automatic refresh trigger
4. Add tests for near-expiry scenarios
"

# QA-specific preferences
PREFER_CONCISE_OUTPUT="false"      # QA benefits from thorough explanations
PREFER_ANALYSIS="true"              # Emphasize analysis over code generation
INCLUDE_CONTEXT_HINTS="true"        # Help with understanding the codebase
INCLUDE_REFERENCES="true"           # Reference specific files and line numbers
MAX_SUGGESTED_FILES="15"            # Moderate context for focused Q&A
CONTEXT_WINDOW_SIZE="128000"        # Standard GPT-4 window

# QA module integration
QA_STORE_HISTORY="true"             # Store in QA database
QA_FORMAT="markdown"                # Return markdown responses
