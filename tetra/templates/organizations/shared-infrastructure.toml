# Shared Infrastructure Organization Template
# For environments that share IP addresses but use different subdomains
# Organization: ${ORG_NAME}

[metadata]
name = "${ORG_NAME}"
type = "shared-infrastructure"
description = "Multi-environment setup with shared infrastructure and subdomain routing"
created_from_template = "shared-infrastructure"

[org]
name = "${ORG_NAME}"
description = "${ORG_NAME} shared infrastructure setup"

# Infrastructure definitions - may be shared across environments
[infrastructure]
# Primary shared server
shared_server_ip = "137.184.226.163"
shared_private_ip = "10.116.0.2"
load_balancer_ip = "137.184.226.163"

# Environment-specific backend servers (if different)
dev_server_ip = "137.184.226.163"
dev_private_ip = "10.116.0.2"
staging_server_ip = "137.184.226.163"  # Same as dev in shared setup
staging_private_ip = "10.116.0.2"      # Same as dev in shared setup
prod_server_ip = "137.184.226.163"     # Same as dev/staging in shared setup
prod_private_ip = "10.116.0.2"         # Same as dev/staging in shared setup

# Server hostnames from DigitalOcean
dev_server_hostname = "pxjam-arcade-dev01"
staging_server_hostname = "pxjam-arcade-qa01"
prod_server_hostname = "pxjam-arcade-prod01"

# Network configuration
provider = "digitalocean"
region = "nyc3"

[environments.local]
description = "Local development environment"
app_port = 3000
node_env = "development"
domain = "localhost"
url = "http://localhost:3000"

[environments.dev]
description = "Development server environment"
# Server configuration - maps to NH $pad variables
server_hostname = "${infrastructure.dev_server_hostname}"
server_ip = "${infrastructure.dev_server_ip}"
private_ip = "${infrastructure.dev_private_ip}"
# Domain and routing
domain = "dev.${domains.base_domain}"
subdomain = "dev"
url = "https://dev.${domains.base_domain}"
# Service configuration
app_port = 3000
node_env = "development"
# SSH configuration
ssh_user = "tetra"
ssh_key_path = "~/.ssh/id_rsa"

[environments.staging]
description = "Staging/QA environment"
# Server configuration - maps to NH $paq variables
server_hostname = "${infrastructure.staging_server_hostname}"
server_ip = "${infrastructure.staging_server_ip}"
private_ip = "${infrastructure.staging_private_ip}"
# Domain and routing
domain = "staging.${domains.base_domain}"
subdomain = "staging"
url = "https://staging.${domains.base_domain}"
# Service configuration
app_port = 3001
node_env = "staging"
# SSH configuration
ssh_user = "tetra"
ssh_key_path = "~/.ssh/id_rsa"

[environments.prod]
description = "Production environment"
# Server configuration - maps to NH $pap variables
server_hostname = "${infrastructure.prod_server_hostname}"
server_ip = "${infrastructure.prod_server_ip}"
private_ip = "${infrastructure.prod_private_ip}"
# Domain and routing
domain = "${domains.base_domain}"
subdomain = ""  # Root domain
url = "https://${domains.base_domain}"
# Service configuration
app_port = 80
node_env = "production"
# SSH configuration
ssh_user = "tetra"
ssh_key_path = "~/.ssh/id_rsa"

[environments.qa]
description = "QA/Testing environment"
# Server configuration - dedicated QA server
server_hostname = "${infrastructure.staging_server_hostname}"
server_ip = "137.184.226.164"  # Dedicated QA server IP
private_ip = "10.116.0.3"      # Dedicated QA private IP
# Domain and routing
domain = "qa.${domains.base_domain}"
subdomain = "qa"
url = "https://qa.${domains.base_domain}"
# Service configuration
app_port = 3002
node_env = "testing"
# SSH configuration
ssh_user = "tetra"
ssh_key_path = "~/.ssh/id_rsa"

# Domain configuration for shared IP scenarios
[domains]
base_domain = "pixeljamarcade.com"
dev = "dev.pixeljamarcade.com"
staging = "staging.pixeljamarcade.com"
prod = "pixeljamarcade.com"
qa = "qa.pixeljamarcade.com"

# SSL/TLS certificates per environment
[ssl]
dev_cert_path = "/etc/letsencrypt/live/dev.pixeljamarcade.com/fullchain.pem"
dev_key_path = "/etc/letsencrypt/live/dev.pixeljamarcade.com/privkey.pem"
staging_cert_path = "/etc/letsencrypt/live/staging.pixeljamarcade.com/fullchain.pem"
staging_key_path = "/etc/letsencrypt/live/staging.pixeljamarcade.com/privkey.pem"
prod_cert_path = "/etc/letsencrypt/live/pixeljamarcade.com/fullchain.pem"
prod_key_path = "/etc/letsencrypt/live/pixeljamarcade.com/privkey.pem"
qa_cert_path = "/etc/letsencrypt/live/qa.pixeljamarcade.com/fullchain.pem"
qa_key_path = "/etc/letsencrypt/live/qa.pixeljamarcade.com/privkey.pem"

# Nginx virtual host configuration for shared IP routing
[nginx]
shared_ip = "${infrastructure.shared_server_ip}"
config_path = "/etc/nginx/sites-available"

[nginx.vhosts.dev]
server_name = "dev.pixeljamarcade.com"
root_path = "/var/www/dev.pixeljamarcade.com"
upstream_port = 3000
ssl_enabled = true

[nginx.vhosts.staging]
server_name = "staging.pixeljamarcade.com"
root_path = "/var/www/staging.pixeljamarcade.com"
upstream_port = 3001
ssl_enabled = true

[nginx.vhosts.prod]
server_name = "pixeljamarcade.com www.pixeljamarcade.com"
root_path = "/var/www/pixeljamarcade.com"
upstream_port = 80
ssl_enabled = true

[nginx.vhosts.qa]
server_name = "qa.pixeljamarcade.com"
root_path = "/var/www/qa.pixeljamarcade.com"
upstream_port = 3002
ssl_enabled = true

# Environment variables that will be generated
[variables]
# NH variable mappings for backwards compatibility
pad = "${infrastructure.dev_server_ip}"         # NH development server variable
padp = "${infrastructure.dev_private_ip}"       # NH development private IP
paq = "${infrastructure.staging_server_ip}"     # NH staging server variable
paqp = "${infrastructure.staging_private_ip}"   # NH staging private IP
pap = "${infrastructure.prod_server_ip}"        # NH production server variable
papp = "${infrastructure.prod_private_ip}"      # NH production private IP

# Standard Tetra environment variables
tetra_dev_ip = "${infrastructure.dev_server_ip}"
tetra_dev_private_ip = "${infrastructure.dev_private_ip}"
tetra_staging_ip = "${infrastructure.staging_server_ip}"
tetra_staging_private_ip = "${infrastructure.staging_private_ip}"
tetra_prod_ip = "${infrastructure.prod_server_ip}"
tetra_prod_private_ip = "${infrastructure.prod_private_ip}"

# Environment-specific variable patterns
[variables.dev]
server_ip = "${infrastructure.dev_server_ip}"
private_ip = "${infrastructure.dev_private_ip}"
domain = "${domains.dev}"
ssh_user = "tetra"
deploy_path = "/var/www/dev.pixeljamarcade.com"
app_port = 3000

[variables.staging]
server_ip = "${infrastructure.staging_server_ip}"
private_ip = "${infrastructure.staging_private_ip}"
domain = "${domains.staging}"
ssh_user = "tetra"
deploy_path = "/var/www/staging.pixeljamarcade.com"
app_port = 3001

[variables.prod]
server_ip = "${infrastructure.prod_server_ip}"
private_ip = "${infrastructure.prod_private_ip}"
domain = "${domains.prod}"
ssh_user = "tetra"
deploy_path = "/var/www/pixeljamarcade.com"
app_port = 80

[variables.qa]
server_ip = "${infrastructure.qa_server_ip}"
private_ip = "${infrastructure.qa_private_ip}"
domain = "${domains.qa}"
ssh_user = "tetra"
deploy_path = "/var/www/qa.pixeljamarcade.com"
app_port = 3002

# Service definitions for TSM
[services.app]
type = "nodejs"
environments = ["dev", "staging", "prod", "qa"]

[services.app.dev]
port = 3000
path = "."
start_command = "npm run dev"
env_file = "env/dev.env"

[services.app.staging]
port = 3001
path = "."
start_command = "npm run start"
env_file = "env/staging.env"

[services.app.prod]
port = 80
path = "."
start_command = "npm run start"
env_file = "env/prod.env"

[services.app.qa]
port = 3002
path = "."
start_command = "npm run test"
env_file = "env/qa.env"

# Deployment configuration
[deployment]
strategy = "shared-infrastructure"
routing_method = "nginx-vhosts"
ssl_provider = "letsencrypt"

[deployment.dev]
target_ip = "${infrastructure.dev_server_ip}"
target_user = "tetra"
deploy_path = "/var/www/dev.pixeljamarcade.com"
service_restart = "systemctl restart nginx"

[deployment.staging]
target_ip = "${infrastructure.staging_server_ip}"
target_user = "tetra"
deploy_path = "/var/www/staging.pixeljamarcade.com"
service_restart = "systemctl restart nginx"

[deployment.prod]
target_ip = "${infrastructure.prod_server_ip}"
target_user = "tetra"
deploy_path = "/var/www/pixeljamarcade.com"
service_restart = "systemctl restart nginx"

[deployment.qa]
target_ip = "${infrastructure.qa_server_ip}"
target_user = "tetra"
deploy_path = "/var/www/qa.pixeljamarcade.com"
service_restart = "systemctl restart nginx"